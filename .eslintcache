[{"/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/App.js":"1","/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/useBooksSearch.js":"2","/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/index.js":"3","/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/Search/index.js":"4"},{"size":2957,"mtime":1608714895304,"results":"5","hashOfConfig":"6"},{"size":1045,"mtime":1608716691225,"results":"7","hashOfConfig":"6"},{"size":244,"mtime":1608710168291,"results":"8","hashOfConfig":"6"},{"size":380,"mtime":1608712023411,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1imx2a3",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/App.js",[],"/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/useBooksSearch.js",["18"],"/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/index.js",[],"/Users/kancravi@us.ibm.com/MyWork/infinitescroll/src/Search/index.js",[],{"ruleId":"19","severity":1,"message":"20","line":24,"column":53,"nodeType":"21","endLine":24,"endColumn":54},"react-hooks/exhaustive-deps","Assignments to the 'cancel' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Identifier"]